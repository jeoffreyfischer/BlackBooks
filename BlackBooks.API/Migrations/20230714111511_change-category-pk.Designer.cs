// <auto-generated />
using BlackBooks.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackBooks.API.Migrations
{
    [DbContext(typeof(BlackBooksDbContext))]
    [Migration("20230714111511_change-category-pk")]
    partial class changecategorypk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jules Verne"
                        },
                        new
                        {
                            Id = 2,
                            Name = "H.G. Wells"
                        },
                        new
                        {
                            Id = 3,
                            Name = "J.R.R. Tolkien"
                        });
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Journey to the Center of the Earth"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Title = "Twenty Thousand Leagues Under the Sea"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Title = "The Time Machine"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Title = "The War of the Worlds"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            Title = "The Lord of the Rings"
                        });
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            BookId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            BookId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            BookId = 6,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 6,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Book", b =>
                {
                    b.HasOne("BlackBooks.API.Data.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.BookCategory", b =>
                {
                    b.HasOne("BlackBooks.API.Data.Entities.Book", "Book")
                        .WithMany("Categories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlackBooks.API.Data.Entities.Category", "Category")
                        .WithMany("BooksInCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Book", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("BlackBooks.API.Data.Entities.Category", b =>
                {
                    b.Navigation("BooksInCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
